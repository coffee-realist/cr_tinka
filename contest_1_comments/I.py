n = int(input())
zeros = list(map(int, input().split()))
a = [0] * n
last_zero = n
s = 0
# первый ответ для исходной ситуации с массивом из нулей всегда 1, печатаем сразу
print(1, end=' ')
# суть алгоритма: найти сумму всех единичек в текущем массиве до самого правого нуля, после него уже всё отсортировано,
# там пузырьку делать нечего; ну и к ответу нужно в конце прибавить единичку,
# т.к. это ещё один проход пузырька по отсортированному массиву, чтобы осознать его отсортированность
for zero_ind in zeros:
    # меняем по текущими индексу 0 на 1
    a[zero_ind - 1] = 1
    # если текущий индекс совпадает с последним нулем, который изначально на позиции n, то пришло время отнимать
    # от поддерживаемой суммы s уже прибавленные единицы, которые теперь будут находиться справа от крайнего нуля
    if zero_ind == last_zero:
        d = last_zero
        # ищем с конца индекс самого правого нуля
        for i in range(last_zero - 1, -1, -1):
            if a[i] == 0:
                # считаем сколько единиц нужно отнять
                d = last_zero - i - 1
                last_zero = i + 1
                break
        # отнимаем
        s -= d
    # базовый подсчёт единичек
    s += 1
    # вывод текущей суммы единичек до самого правого нуля плюс один
    print(s + 1, end=" ")
